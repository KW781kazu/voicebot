name: Rollback ECS service

on:
  workflow_dispatch:
    inputs:
      target_revision:
        description: "任意: voicebot-task のリビジョン番号（例: 58）。未指定なら直前のリビジョンへ戻す"
        required: false
        type: string

env:
  AWS_REGION: ap-northeast-1
  CLUSTER: voicebot-cluster
  SERVICE: svc-voicebot
  TASK_FAMILY: voicebot-task
  PROD_URL: https://voice.frontglass.net

permissions:
  contents: read

jobs:
  rollback:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ▼ deploy.yml と同じ「アクセスキー方式」に変更
      - name: Configure AWS credentials (keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Find current taskDefinition
        id: cur
        run: |
          set -euo pipefail
          CUR_TD=$(aws ecs describe-services \
            --cluster "$CLUSTER" \
            --services "$SERVICE" \
            --query 'services[0].taskDefinition' \
            --output text)
          echo "current=$CUR_TD" >> $GITHUB_OUTPUT

      - name: Decide target taskDefinition
        id: tgt
        run: |
          set -euo pipefail
          if [ -n "${{ inputs.target_revision }}" ]; then
            TGT_TD="arn:aws:ecs:${AWS_REGION}:${{ secrets.AWS_ACCOUNT_ID }}:task-definition/${TASK_FAMILY}:${{ inputs.target_revision }}"
          else
            TGT_TD=$(aws ecs list-task-definitions \
              --family-prefix "$TASK_FAMILY" \
              --status ACTIVE \
              --sort DESC \
              --query 'taskDefinitionArns[1]' \
              --output text)
          fi
          test -n "$TGT_TD" && [ "$TGT_TD" != "None" ]
          echo "target=$TGT_TD" >> $GITHUB_OUTPUT

      - name: Update service to target taskDefinition (rolling)
        run: |
          aws ecs update-service \
            --cluster "$CLUSTER" \
            --service "$SERVICE" \
            --task-definition "${{ steps.tgt.outputs.target }}"

      - name: Wait until service stable
        run: |
          aws ecs wait services-stable \
            --cluster "$CLUSTER" \
            --services "$SERVICE"

      - name: Smoke - /version returns JSON
        run: |
          set -e
          URL="${PROD_URL}/version"
          RES=$(curl -sS -w "\n%{http_code}" "$URL")
          BODY=$(echo "$RES" | sed '$d'); CODE=$(echo "$RES" | tail -n1)
          echo "HTTP $CODE"; test "$CODE" = "200"
          echo "$BODY" | jq '.app' >/dev/null

      - name: Smoke - /twiml returns XML
        run: |
          set -e
          URL="${PROD_URL}/twiml"
          RES=$(curl -sS -H "Accept: text/xml" -w "\n%{http_code}" "$URL")
          BODY=$(echo "$RES" | sed '$d'); CODE=$(echo "$RES" | tail -n1)
          echo "HTTP $CODE"; test "$CODE" = "200"
          echo "$BODY" | grep -q "<Response>"

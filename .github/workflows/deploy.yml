name: Deploy to ECS (same-tag rollout)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  ACCOUNT_ID: "291234479055"
  ECR_REPO: voicebot
  IMAGE_TAG: v1
  CLUSTER_ARN: arn:aws:ecs:ap-northeast-1:291234479055:cluster/voicebot-cluster
  SERVICE_ARN: arn:aws:ecs:ap-northeast-1:291234479055:service/voicebot-cluster/svc-voicebot

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ① AWS 認証（いまはSecrets利用のまま）
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ② ECR ログイン
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region "${AWS_REGION}" \
            | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      # ③ デプロイスタンプを書き出し（/version で見えるやつ）
      - name: Write deploy stamp (auto)
        run: |
          echo "deployed_at $(date -u +'%Y-%m-%dT%H:%M:%SZ') $GITHUB_SHA" > DEPLOY_STAMP.txt

      # ④ Buildx + キャッシュ（速い）
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image (with cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ⑤ 同一タグのまま「新デプロイを強制」→ Fargate が新イメージをpull
      - name: Force new deployment (same tag pull)
        run: |
          aws ecs update-service \
            --cluster  "${CLUSTER_ARN}" \
            --service  "${SERVICE_ARN}" \
            --force-new-deployment \
            --region   "${AWS_REGION}"

          # 安定化待ち（exponential backoffで10分程度）
          aws ecs wait services-stable \
            --cluster "${CLUSTER_ARN}" \
            --services "${SERVICE_ARN}" \
            --region  "${AWS_REGION}"

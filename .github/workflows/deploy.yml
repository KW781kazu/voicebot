name: Deploy to ECS (same-tag rollout)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  ACCOUNT_ID: "291234479055"
  ECR_REPO: voicebot
  IMAGE_TAG: v1
  CLUSTER_ARN: arn:aws:ecs:ap-northeast-1:291234479055:cluster/voicebot-cluster
  SERVICE_ARN: arn:aws:ecs:ap-northeast-1:291234479055:service/voicebot-cluster/svc-voicebot

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I (STS)
        run: aws sts get-caller-identity

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" || \
          aws ecr create-repository --repository-name "$ECR_REPO"

      - name: Login to Amazon ECR (explicit)
        run: |
          aws ecr get-login-password --region "$AWS_REGION" \
            | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - name: Write deploy stamp (auto)
        run: |
          echo "redeploy $(date -u +%Y-%m-%dT%H:%M:%SZ) $GITHUB_SHA" > DEPLOY_STAMP.txt
          cat DEPLOY_STAMP.txt

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

      - name: Force new deployment (same tag pull)
        run: |
          aws ecs update-service \
            --cluster "$CLUSTER_ARN" \
            --service "$SERVICE_ARN" \
            --force-new-deployment \
            --region "$AWS_REGION"
